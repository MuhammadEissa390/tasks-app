on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Setup Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to GHCR
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Convert repo name to lowercase
      - name: Set Lowercase Variable
        run: echo "REPO_LOWER=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Show Variables
        run: |
          echo "Original: ${{ github.repository }}"
          echo "Lowercase: ${{ env.REPO_LOWER }}"

      # Build Image With Docker Composerun: 
      - name: Build and Run with Docker Compose
        run: |
          docker compose up -d --build
          docker ps

      - name: Push and tag backend
        run: |
          IMAGE_BACKEND=ghcr.io/${{ env.REPO_LOWER }}/tasks-app-backend
          docker tag tasks-app-backend:latest $IMAGE_BACKEND:${{ github.sha }}
          docker tag tasks-app-backend:latest $IMAGE_BACKEND:latest
          docker push $IMAGE_BACKEND:${{ github.sha }}
          docker push $IMAGE_BACKEND:latest
          

      - name: Push and tag frontend
        run: |
          IMAGE_FRONTEND=ghcr.io/${{ env.REPO_LOWER }}/tasks-app-frontend
          docker tag tasks-app-frontend:latest $IMAGE_FRONTEND:${{ github.sha }}
          docker tag tasks-app-frontend:latest $IMAGE_FRONTEND:latest
          docker push $IMAGE_FRONTEND:${{ github.sha }}
          docker push $IMAGE_FRONTEND:latest
          
          
        
      # Security Scan with Trivy
      - name: Security Scan backend with Trivy
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: ghcr.io/${{ env.REPO_LOWER }}$IMAGE_BACKEND:${{ github.sha }}
          format: sarif
          output: trivy-results.sarif
          vuln-type: 'os,library'
          

      - name: Security Scan Frontend with Trivy
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: ghcr.io/${{ env.REPO_LOWER }}$IMAGE_FRONTEND:${{ github.sha }}
          format: sarif
          output: trivy-results.sarif
          vuln-type: 'os,library'
        

      # Sign Image with Cosign
      - name: Sign Image with Cosign
        run: |
          cosign sign --key cosign.key ${{ env.IMAGE }}
